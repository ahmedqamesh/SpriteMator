# -*- coding: utf-8 -*-

# Created: Sat Jul  5 15:17:19 2014
#      by: PyQt5 UI code generator 5.2
#
# WARNING! All changes made in this file will be lost!

from PyQt5 import QtCore, QtWidgets

class Ui_MainWindow(object):
    def setupUi(self, MainWindow):
        MainWindow.setObjectName("MainWindow")
        MainWindow.resize(1024, 768)
        MainWindow.setMinimumSize(QtCore.QSize(1024, 768))
        MainWindow.setStyleSheet("")
        MainWindow.setToolButtonStyle(QtCore.Qt.ToolButtonIconOnly)
        self.centralwidget = QtWidgets.QWidget(MainWindow)
        self.centralwidget.setObjectName("centralwidget")
        self.horizontalLayout = QtWidgets.QHBoxLayout(self.centralwidget)
        self.horizontalLayout.setObjectName("horizontalLayout")
        self.topDownSplitter = QtWidgets.QSplitter(self.centralwidget)
        self.topDownSplitter.setOrientation(QtCore.Qt.Vertical)
        self.topDownSplitter.setOpaqueResize(True)
        self.topDownSplitter.setHandleWidth(5)
        self.topDownSplitter.setObjectName("topDownSplitter")
        self.leftRightSplitter = QtWidgets.QSplitter(self.topDownSplitter)
        self.leftRightSplitter.setOrientation(QtCore.Qt.Horizontal)
        self.leftRightSplitter.setObjectName("leftRightSplitter")
        self.leftPanel = QtWidgets.QFrame(self.leftRightSplitter)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Preferred, QtWidgets.QSizePolicy.Preferred)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.leftPanel.sizePolicy().hasHeightForWidth())
        self.leftPanel.setSizePolicy(sizePolicy)
        self.leftPanel.setMinimumSize(QtCore.QSize(245, 550))
        self.leftPanel.setMaximumSize(QtCore.QSize(245, 16777215))
        self.leftPanel.setStyleSheet("")
        self.leftPanel.setFrameShape(QtWidgets.QFrame.StyledPanel)
        self.leftPanel.setFrameShadow(QtWidgets.QFrame.Raised)
        self.leftPanel.setObjectName("leftPanel")
        self.verticalLayout_2 = QtWidgets.QVBoxLayout(self.leftPanel)
        self.verticalLayout_2.setObjectName("verticalLayout_2")
        self.colorPickerFrame = QtWidgets.QFrame(self.leftPanel)
        self.colorPickerFrame.setMinimumSize(QtCore.QSize(0, 0))
        self.colorPickerFrame.setMaximumSize(QtCore.QSize(16777215, 16777215))
        self.colorPickerFrame.setFrameShape(QtWidgets.QFrame.StyledPanel)
        self.colorPickerFrame.setFrameShadow(QtWidgets.QFrame.Raised)
        self.colorPickerFrame.setObjectName("colorPickerFrame")
        self.verticalLayout_2.addWidget(self.colorPickerFrame)
        self.verticalLayout_2.setStretch(0, 5)
        self.mainPanel = QtWidgets.QFrame(self.leftRightSplitter)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Preferred, QtWidgets.QSizePolicy.Preferred)
        sizePolicy.setHorizontalStretch(1)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.mainPanel.sizePolicy().hasHeightForWidth())
        self.mainPanel.setSizePolicy(sizePolicy)
        self.mainPanel.setMinimumSize(QtCore.QSize(32, 32))
        self.mainPanel.setAutoFillBackground(False)
        self.mainPanel.setStyleSheet("")
        self.mainPanel.setFrameShape(QtWidgets.QFrame.StyledPanel)
        self.mainPanel.setFrameShadow(QtWidgets.QFrame.Raised)
        self.mainPanel.setObjectName("mainPanel")
        self.verticalLayout = QtWidgets.QVBoxLayout(self.mainPanel)
        self.verticalLayout.setObjectName("verticalLayout")
        self.canvasFrame = QtWidgets.QFrame(self.mainPanel)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Preferred, QtWidgets.QSizePolicy.Preferred)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.canvasFrame.sizePolicy().hasHeightForWidth())
        self.canvasFrame.setSizePolicy(sizePolicy)
        self.canvasFrame.setStyleSheet("")
        self.canvasFrame.setFrameShape(QtWidgets.QFrame.StyledPanel)
        self.canvasFrame.setFrameShadow(QtWidgets.QFrame.Raised)
        self.canvasFrame.setObjectName("canvasFrame")
        self.verticalLayout.addWidget(self.canvasFrame)
        self.verticalLayout.setStretch(0, 12)
        self.rightPanel = QtWidgets.QFrame(self.leftRightSplitter)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Preferred, QtWidgets.QSizePolicy.Preferred)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.rightPanel.sizePolicy().hasHeightForWidth())
        self.rightPanel.setSizePolicy(sizePolicy)
        self.rightPanel.setMinimumSize(QtCore.QSize(245, 550))
        self.rightPanel.setMaximumSize(QtCore.QSize(380, 16777215))
        self.rightPanel.setStyleSheet("")
        self.rightPanel.setFrameShape(QtWidgets.QFrame.StyledPanel)
        self.rightPanel.setFrameShadow(QtWidgets.QFrame.Raised)
        self.rightPanel.setObjectName("rightPanel")
        self.verticalLayout_3 = QtWidgets.QVBoxLayout(self.rightPanel)
        self.verticalLayout_3.setObjectName("verticalLayout_3")
        self.previewFrame = QtWidgets.QFrame(self.rightPanel)
        self.previewFrame.setStyleSheet("")
        self.previewFrame.setFrameShape(QtWidgets.QFrame.StyledPanel)
        self.previewFrame.setFrameShadow(QtWidgets.QFrame.Raised)
        self.previewFrame.setObjectName("previewFrame")
        self.verticalLayout_3.addWidget(self.previewFrame)
        self.layerListFrame = QtWidgets.QFrame(self.rightPanel)
        self.layerListFrame.setStyleSheet("")
        self.layerListFrame.setFrameShape(QtWidgets.QFrame.StyledPanel)
        self.layerListFrame.setFrameShadow(QtWidgets.QFrame.Raised)
        self.layerListFrame.setObjectName("layerListFrame")
        self.verticalLayout_3.addWidget(self.layerListFrame)
        self.animationBarFrame = QtWidgets.QFrame(self.topDownSplitter)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Preferred, QtWidgets.QSizePolicy.Preferred)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.animationBarFrame.sizePolicy().hasHeightForWidth())
        self.animationBarFrame.setSizePolicy(sizePolicy)
        self.animationBarFrame.setMinimumSize(QtCore.QSize(0, 100))
        self.animationBarFrame.setMaximumSize(QtCore.QSize(16777215, 100))
        self.animationBarFrame.setStyleSheet("")
        self.animationBarFrame.setFrameShape(QtWidgets.QFrame.StyledPanel)
        self.animationBarFrame.setFrameShadow(QtWidgets.QFrame.Raised)
        self.animationBarFrame.setObjectName("animationBarFrame")
        self.horizontalLayout.addWidget(self.topDownSplitter)
        MainWindow.setCentralWidget(self.centralwidget)
        self.toolBar = QtWidgets.QToolBar(MainWindow)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Preferred, QtWidgets.QSizePolicy.Preferred)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.toolBar.sizePolicy().hasHeightForWidth())
        self.toolBar.setSizePolicy(sizePolicy)
        self.toolBar.setMovable(False)
        self.toolBar.setFloatable(False)
        self.toolBar.setObjectName("toolBar")
        MainWindow.addToolBar(QtCore.Qt.TopToolBarArea, self.toolBar)
        self.actionNew = QtWidgets.QAction(MainWindow)
        self.actionNew.setObjectName("actionNew")
        self.actionQuit = QtWidgets.QAction(MainWindow)
        self.actionQuit.setObjectName("actionQuit")
        self.actionOpen = QtWidgets.QAction(MainWindow)
        self.actionOpen.setObjectName("actionOpen")
        self.actionSave = QtWidgets.QAction(MainWindow)
        self.actionSave.setObjectName("actionSave")
        self.actionSaveAs = QtWidgets.QAction(MainWindow)
        self.actionSaveAs.setObjectName("actionSaveAs")
        self.actionClose = QtWidgets.QAction(MainWindow)
        self.actionClose.setObjectName("actionClose")
        self.actionExport = QtWidgets.QAction(MainWindow)
        self.actionExport.setObjectName("actionExport")
        self.actionImport = QtWidgets.QAction(MainWindow)
        self.actionImport.setObjectName("actionImport")
        self.toolBar.addAction(self.actionNew)
        self.toolBar.addAction(self.actionOpen)
        self.toolBar.addAction(self.actionImport)
        self.toolBar.addAction(self.actionSave)
        self.toolBar.addAction(self.actionSaveAs)
        self.toolBar.addAction(self.actionExport)
        self.toolBar.addAction(self.actionClose)
        self.toolBar.addAction(self.actionQuit)

        self.retranslateUi(MainWindow)
        QtCore.QMetaObject.connectSlotsByName(MainWindow)

    def retranslateUi(self, MainWindow):
        _translate = QtCore.QCoreApplication.translate
        MainWindow.setWindowTitle(_translate("MainWindow", "SpriteMator"))
        self.toolBar.setWindowTitle(_translate("MainWindow", "toolBar"))
        self.actionNew.setText(_translate("MainWindow", "New"))
        self.actionNew.setIconText(_translate("MainWindow", "New"))
        self.actionNew.setToolTip(_translate("MainWindow", "New Sprite"))
        self.actionNew.setShortcut(_translate("MainWindow", "Ctrl+N"))
        self.actionQuit.setText(_translate("MainWindow", "Quit"))
        self.actionQuit.setToolTip(_translate("MainWindow", "Close Application"))
        self.actionQuit.setShortcut(_translate("MainWindow", "Esc"))
        self.actionOpen.setText(_translate("MainWindow", "Open"))
        self.actionOpen.setToolTip(_translate("MainWindow", "Open Sprite"))
        self.actionOpen.setShortcut(_translate("MainWindow", "Ctrl+O"))
        self.actionSave.setText(_translate("MainWindow", "Save"))
        self.actionSave.setToolTip(_translate("MainWindow", "Save Sprite"))
        self.actionSave.setShortcut(_translate("MainWindow", "Ctrl+S"))
        self.actionSaveAs.setText(_translate("MainWindow", "SaveAs"))
        self.actionSaveAs.setToolTip(_translate("MainWindow", "Save Sprite with another name"))
        self.actionSaveAs.setShortcut(_translate("MainWindow", "Ctrl+Shift+S"))
        self.actionClose.setText(_translate("MainWindow", "Close"))
        self.actionClose.setToolTip(_translate("MainWindow", "Close Sprite"))
        self.actionClose.setShortcut(_translate("MainWindow", "Ctrl+Q"))
        self.actionExport.setText(_translate("MainWindow", "Export"))
        self.actionExport.setToolTip(_translate("MainWindow", "Export Sprite animations : Either as separate images or as a spritesheet"))
        self.actionExport.setShortcut(_translate("MainWindow", "Ctrl+E"))
        self.actionImport.setText(_translate("MainWindow", "Import"))
        self.actionImport.setToolTip(_translate("MainWindow", "Create a Sprite from one or more images"))
        self.actionImport.setShortcut(_translate("MainWindow", "Ctrl+I"))

